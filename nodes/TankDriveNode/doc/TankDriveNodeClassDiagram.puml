@startuml
title Tank Drive Node Class Diagram

package eros {
  class BaseNode
  class BaseNodeProcess
}
package ros {
  class Subscriber
  class Publisher
}
package geometry_msgs {
  class Twist <<(M,#FFFF00)>>
}
package std_msgs {
  class UInt16 <<(M,#FFFF00)>>
}
package crawler_app {

  class TankDriveNode #LimeGreen {
      +const std::string BASE_NODE_NAME
      +const uint16_t MAJOR_RELEASE_VERSION
      +const uint16_t MINOR_RELEASE_VERSION
      +const uint16_t BUILD_NUMBER
      +const std::string FIRMWARE_DESCRIPTION
      +const eros::System::MainSystem DIAGNOSTIC_SYSTEM
      +const eros::System::SubSystem DIAGNOSTIC_SUBSYSTEM
      +const eros::System::Component DIAGNOSTIC_COMPONENT
   
      -- Initialization Functions --
      +bool start()
      +eros::eros_diagnostic::Diagnostic finish_initialization()

      -- Update Functions --
      +bool run_loop1()
      +bool run_loop2()
      +bool run_loop3()
      +bool run_001hz()
      +bool run_01hz()
      +bool run_01hz_noisy()
      +bool run_1hz()
      +bool run_10hz()
      +thread_loop()

      -- Attribute Functions --
      +TankDriveNodeProcess* get_process()

      -- Data Functions --

      -- Message Functions --
      +bool changenodestate_service(eros::srv_change_nodestate::Request& req, eros::srv_change_nodestate::Response& res)
      +system_commandAction_Callback(const eros::system_commandGoalConstPtr& goal)
      +command_Callback(const eros::command::ConstPtr& t_msg)
      +cmd_vel_Callback(const geometry_msgs::Twist::ConstPtr& t_msg)

      -- Support Functions --

      -- Convert Functions --
      
      -- Printing Functions --

      -- Destructors --
      +cleanup()

      -- Printing Functions --

      -TankDriveNodeProcess* process;
      -Subscriber cmd_vel_sub
      -Publisher leftdrive_pub
      -Publisher rightdrive_pub
  }
  struct TankDriveNodeProcessContainer #LimeGreen {
    UInt16 left_drive
    UIint16 right_drive
  }
  enum Mode #LimeGreen {
    UNKNOWN=0,
    SIMPLE_ARCADE=1,
    END_OF_LIST=2
  }
  class TankDriveNodeProcess #LimeGreen {
      +const uint16_t LEFTDRIVE_DEFAULT
      +const uint16_t RIGHTDRIVE_DEFAULT
      
      -- Initialization Functions --
      +eros::eros_diagnostic::Diagnostic finish_initialization()
      +reset()

      -- Update Functions --
      +eros::eros_diagnostic::Diagnostic update(double t_dt, double t_ros_time)

      -- Attribute Functions --
      +std::vector<eros::eros_diagnostic::Diagnostic> check_programvariables()
        +TankDriveNodeProcessContainer get_drive_command()
      +Mode get_mode()

      -- Data Functions --

      -- Message Functions --
      +std::vector<eros::eros_diagnostic::Diagnostic> new_commandmsg(eros::command msg)
      +TankDriveNodeProcessContainer new_cmd_vel(Twist cmd_vel_perc)
      void update_armedstate(eros::ArmDisarm::State armed_state)

      -- Support Functions --

      -- Convert Functions --
      
      -- Printing Functions --

      -- Destructors --
      +cleanup()

      -- Printing Functions --

  }
  TankDriveNodeProcess +-- TankDriveNodeProcessContainer
  TankDriveNodeProcess +-- Mode
  BaseNode <|-- TankDriveNode
  BaseNodeProcess <|-- TankDriveNodeProcess
  TankDriveNode -> TankDriveNodeProcess
}
@enduml