@startuml
title Tank Drive Node Sequence Diagram
actor User as user
participant TankDriveNode as node
participant TankDriveNodeProcess as process
participant Logger as logger

alt initialize
    activate node
    node -> node++: start()
    node -> node: initialize_diagnostic
    node -> process++: TankDriveNodeProcess()
    node -> node: preinitialize_basenode()
    node -> process: enable_diagnostics()
    node -> process: finish_initialization()
    node -> node: finish_initialization()
    node -> node: rescan_nodes()
    node -> process: request_statechange(RUNNING,override=true)
    node--
end

alt message_callback
alt cmd_vel
    user -> node++: cmd_vel_Callback(cmd_vel)
    node -> process++: new_cmd_vel(cmd_vel)
    process --> node--
    node--

end
end

alt loops
    alt loop1
        node -> node++: run_loop1
        node--
    end
    alt loop2
        node -> node++: run_loop2
        node--
    end
    alt loop3
        node -> node++: run_loop3
        node--
    end
    alt run_001hz
        node -> node++: run_001hz
        node--
    end
    alt run_01hz
        node -> node++: run_001hz
        node--
    end
    alt run_01hz_noisy
        node -> process: pretty()
        process --> node: str
        node -> logger: log_debug(str)
    end
    alt run_1hz
        node -> process: get_latest_diagnostics()
        process --> node: latest_diagnostics
        node -> user: publish(latest_diagnostics)
    end
    alt run_10hz
        node -> process++: get_drive_command()
        process --> node--: output
        node -> user: publish(output.left_drive)
        node -> user: publish(output.right_drive)
        node -> process: update(0.1, now)
        process --> node: diag
        alt if diag.level >= NOTICE
            node -> logger: log_diagnostic(diag)
        end
        node -> process: get_diagnostics()
        process --> node: diagnostics
        node -> node: update_diagnostics(diagnostics)
        node -> process: get_ready_to_arm()
        process --> node: ready_to_arm
        node -> node: update_ready_to_arm(ready_to_arm)

    end
end
@enduml